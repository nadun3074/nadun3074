name: Access Google via Headless Browser

on: 
  push:
    branches:
      - main

jobs:
  access_google:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Add delay
      run: sleep 12  # Adjust the delay as needed for your specific case

    - name: Install Tor
      run: |
        sudo apt-get update
        sudo apt-get install -y tor

    - name: Create access-google.js script
      run: |
        echo "const puppeteer = require('puppeteer');" > access-google.js
        echo "const { exec } = require('child_process');" >> access-google.js
        echo "const os = require('os');" >> access-google.js
        echo "" >> access-google.js
        echo "// Function to calculate CPU usage" >> access-google.js
        echo "function getCPUUsage() {" >> access-google.js
        echo "    const cpus = os.cpus();" >> access-google.js
        echo "    let totalIdle = 0, totalTick = 0;" >> access-google.js
        echo "" >> access-google.js
        echo "    cpus.forEach((core) => {" >> access-google.js
        echo "        for (let type in core.times) {" >> access-google.js
        echo "            totalTick += core.times[type];" >> access-google.js
        echo "        }" >> access-google.js
        echo "        totalIdle += core.times.idle;" >> access-google.js
        echo "    });" >> access-google.js
        echo "" >> access-google.js
        echo "    return { idle: totalIdle / cpus.length, total: totalTick / cpus.length };" >> access-google.js
        echo "}" >> access-google.js
        echo "" >> access-google.js
        echo "// Function to calculate the current CPU percentage" >> access-google.js
        echo "function calculateCPUPercentage(start, end) {" >> access-google.js
        echo "    const idleDifference = end.idle - start.idle;" >> access-google.js
        echo "    const totalDifference = end.total - start.total;" >> access-google.js
        echo "    const percentageCPU = 100 - ~~(100 * idleDifference / totalDifference);" >> access-google.js
        echo "" >> access-google.js
        echo "    return percentageCPU;" >> access-google.js
        echo "}" >> access-google.js
        echo "" >> access-google.js
        echo "(async () => {" >> access-google.js
        echo "    while (true) {" >> access-google.js
        echo "        // Start Tor" >> access-google.js
        echo "        exec('tor &');" >> access-google.js
        echo "        await new Promise(resolve => setTimeout(resolve, 5000));" >> access-google.js
        echo "" >> access-google.js
        echo "        // Show initial IP address" >> access-google.js
        echo "        const initialResponse = await (await fetch('http://httpbin.org/ip')).json();" >> access-google.js
        echo "        console.log('Initial IP Address (before Tor):', initialResponse);" >> access-google.js
        echo "" >> access-google.js
        echo "        const browser = await puppeteer.launch({" >> access-google.js
        echo "            headless: true," >> access-google.js
        echo "            args: [" >> access-google.js
        echo "                '--no-sandbox'," >> access-google.js
        echo "                '--disable-setuid-sandbox'," >> access-google.js
        echo "                '--proxy-server=socks5://127.0.0.1:9050'" >> access-google.js
        echo "            ]" >> access-google.js
        echo "        });" >> access-google.js
        echo "        const page = await browser.newPage();" >> access-google.js
        echo "" >> access-google.js
        echo "        // Get new IP address via Tor" >> access-google.js
        echo "        await page.goto('http://httpbin.org/ip');" >> access-google.js
        echo "        const ipResponse = await page.content();" >> access-google.js
        echo "        console.log('New IP Address via Tor:', ipResponse);" >> access-google.js
        echo "" >> access-google.js
        echo "        // Navigate to the target website" >> access-google.js
        echo "        await page.goto('https://dileepa70.netlify.app/');" >> access-google.js
        echo "" >> access-google.js
        echo "        // Print page title" >> access-google.js
        echo "        const title = await page.title();" >> access-google.js
        echo "        console.log('Page Title:', title);" >> access-google.js
        echo "" >> access-google.js
        echo "        // Capture CPU usage and log every 30 seconds" >> access-google.js
        echo "        let startMeasure = getCPUUsage();" >> access-google.js
        echo "        const interval = setInterval(() => {" >> access-google.js
        echo "            const endMeasure = getCPUUsage();" >> access-google.js
        echo "            const cpuPercentage = calculateCPUPercentage(startMeasure, endMeasure);" >> access-google.js
        echo "            console.log('Current CPU Usage:', cpuPercentage + '%');" >> access-google.js
        echo "            startMeasure = endMeasure;" >> access-google.js
        echo "        }, 30000);" >> access-google.js
        echo "" >> access-google.js
        echo "        // Wait for 2 minutes" >> access-google.js
        echo "        await new Promise(resolve => setTimeout(resolve, 120000));" >> access-google.js
        echo "" >> access-google.js
        echo "        clearInterval(interval);" >> access-google.js
        echo "        await browser.close();" >> access-google.js
        echo "        exec('pkill tor');" >> access-google.js
        echo "        console.log('Tor stopped.');" >> access-google.js
        echo "" >> access-google.js
        echo "        // Wait for 1 minute before the next iteration" >> access-google.js
        echo "        await new Promise(resolve => setTimeout(resolve, 60000));" >> access-google.js
        echo "    }" >> access-google.js
        echo "})();" >> access-google.js

    - name: Install Puppeteer
      run: npm install puppeteer

    - name: Run headless browser script
      run: node access-google.js
