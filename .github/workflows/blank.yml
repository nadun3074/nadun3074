name: Access Google via Headless Browsers

on: 
  push:
    branches:
      - main
  workflow_dispatch:  # Manual trigger

jobs:
  access_google:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        instance: [1, 2, 3, 4, 5]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Tor
      run: |
        sudo apt-get update
        sudo apt-get install tor -y
        sudo service tor start

    - name: Add delay based on instance
      run: |
        if [ "${{ matrix.instance }}" -eq 2 ]; then sleep 12; fi
        if [ "${{ matrix.instance }}" -eq 3 ]; then sleep 24; fi
        if [ "${{ matrix.instance }}" -eq 4 ]; then sleep 36; fi
        if [ "${{ matrix.instance }}" -eq 5 ]; then sleep 48; fi

    - name: Create access-google.js script
      run: |
        echo "const puppeteer = require('puppeteer');" > access-google.js
        echo "const os = require('os');" >> access-google.js  # Added os module to get CPU usage
        echo "" >> access-google.js
        echo "// Function to calculate CPU usage" >> access-google.js
        echo "function getCPUUsage() {" >> access-google.js
        echo "    const cpus = os.cpus();" >> access-google.js
        echo "    let totalIdle = 0, totalTick = 0;" >> access-google.js
        echo "" >> access-google.js
        echo "    cpus.forEach((core) => {" >> access-google.js
        echo "        for (let type in core.times) {" >> access-google.js
        echo "            totalTick += core.times[type];" >> access-google.js
        echo "        }" >> access-google.js
        echo "        totalIdle += core.times.idle;" >> access-google.js
        echo "    });" >> access-google.js
        echo "" >> access-google.js
        echo "    return { idle: totalIdle / cpus.length, total: totalTick / cpus.length };" >> access-google.js
        echo "}" >> access-google.js
        echo "" >> access-google.js
        echo "// Function to calculate the current CPU percentage" >> access-google.js
        echo "function calculateCPUPercentage(start, end) {" >> access-google.js
        echo "    const idleDifference = end.idle - start.idle;" >> access-google.js
        echo "    const totalDifference = end.total - start.total;" >> access-google.js
        echo "    const percentageCPU = 100 - ~~(100 * idleDifferenc
